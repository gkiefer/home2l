# This file is part of the Home2L project.
#
# (C) 2015-2020 Gundolf Kiefer
#
# Home2L is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Home2L is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Home2L. If not, see <https://www.gnu.org/licenses/>.


# This is an example and template for a Home2L main configuration file.
# In its present form, it configures all instances for the Home2L tutorial.





############################## General settings ################################


[*]

# Set the location in WGS84 coordinates.
#   The location is used by the "timer" driver for twilight calculations
#   and by the "weather" driver for the radar eye.
location.latitudeN  = 48.345            ; some beautiful city in Germany ...
location.longitudeE = 10.944722





############################## Daemon ##########################################

# Define the processes to be run and managed in background by the Home2L daemon.

[daemon]
daemon.run.server = home2l-server
daemon.run.rules  = rules-showhouse
daemon.run.mpd    = /usr/bin/mpd --no-daemon /opt/home2l/etc/mpd-showstage.conf





############################## Server(s) #######################################

# Define and configure the Home2L instances with active servers.

[showhouse,server,wallclock]
rc.enableServer = 1             ; enable servers
rc.serveInterface = local       ; let all servers listen on the local interfaces only
  ; To run the tutorial on multiple machines, replace the previous line by the following:
  ;   rc.serveInterface = any       ; enable non-local interfaces
  ;   rc.network = 192.168.42.0/24  ; define network (to be adapted!)
rc.netTimeout     = 1000        ; tweak network parameters for faster reconnects ...
rc.netRetryDelay  = 5000        ; ... of the rules script


[server]
drv.weather = 1                 ; enable the "weather" driver
#drv.brownies = 1                ; enable the "brownies" driver (optional)
#drv.demo = 1                    ; load the demo driver (optional)


[drv-weather]
weather.stationID = 10852       ; Augsburg, Germany





############################## Brownies ########################################

# Parameters related to Brownies.

[brownie2l,server]
br.serveSocket = brownies-drv   ; maintenance socket
br.link = /dev/i2c

# [brownie2l]
# br.link = "="                   ; try to find a socket on the local server





############################## WallClock #######################################

# Configure the Home2L WallClock with all its applets.

[wallclock]


# General settings ...
sys.droidId = 329         ; 3-digit ID visible in the corner of the screen

ui.standbyDelay = 10000   ; 10 seconds until standby


# Home screen ...
ui.outdoorTempRc  = /alias/weather/temp
ui.outdoorData1Rc = /alias/weather/pressure
ui.outdoorData2Rc = /alias/weather/humidity

ui.indoorTempRc   = /alias/floorplan/living-temp/data


# Floorplan ...
floorplan.useStateRc = /alias/use
floorplan.weatherRc =  /alias/weatherWarning

floorplan.motionDetectorRetention = 5000   ; 5 seconds retention for the motion indicator

floorplan.gadgets.living-roofwin.shades = 1     ; Roof window has electrical shades
floorplan.gadgets.living-roofwin.actuator = 1   ; Roof window can be opened/closed electrically


# Calendar applet...
calendar.enable = 1

calendar.dir = var/calendars  ; base directory for calendar (reminder) files

calendar.0.name = John                    ; Name of the first calendar
calendar.0.color = 0x4040ff   ; blue      ; Color of the first calendar
calendar.1.name = Yoko
calendar.1.color = 0xc02020   ; red
calendar.2.name = Julian
calendar.2.color = 0x20c020   ; green


# Music player ...
music.enable = 1
music.streamDirHint = ~P/Radio    ; MPD folder containing HTTP streams instead of local files (used by the "go to current" button)
music.any.stream.name = "Local"   ; MPD outputs named like this can be streamed to and played back by the local WallClock instance
                                  ; (not activated in the tutorial demo; see comment in mpd-showstage.conf)
music.0.name = ShowStage
music.0.host = localhost:6600
music.0.streamPort = 8002         ; MPD host's output HTTP streaming port
                                  ; (not activated in the tutorial demo; see comment in mpd-showstage.conf)


# Alarm clock...
alarm.snoozeMinutes = 10          ; Alarm clock snooze time in minutes


# Phone ...
#phone.enable = 1             ; enable phone applet (needs further configuration)
