#!/bin/bash

# This file is part of the Home2L project.
#
# (C) 2015-2024 Gundolf Kiefer
#
# Home2L is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Home2L is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Home2L. If not, see <https://www.gnu.org/licenses/>.


# This is the working horse to update a Home2L installation on the local machine.
# It requires root privileges, and it is required that a line like
#
#  "<admin user name> ALL=NOPASSWD:/opt/home2l/bin/home2l-install"
#
# is added to /etc/sudoers.
#
# Also, it is necessary, that 'root' can login via ssh to the master host
# as user 'home2l'.





#################### Helper functions ################################


usage () {
  echo "Usage: ${0##*/} [-y] [-e] [-b] [-a] [<rsync url>]"
  echo "       ${0##*/} -i | --init"
  echo "  -e | --etc:   Update the configuration data from master host"
  echo "  -b | --blob:  Update the big blob from master host"
  echo "  -a | --apk:   Update the Android APK file from master host"
  echo "  -i | --init:  Initialize a new Home2L installation"
  echo
  echo "  <rsync url>:  rsync-compatible path specification to the blob on the master host"
  echo
  echo "If none of -e, -b and -a are given and HOME_ROOT is defined and exists, everything is updated."
}


error () {
  echo "$1"
  echo
  usage
  exit
}




######################### Init #######################################


SELF=`realpath $0`
HOME2L_ROOT=${SELF%/bin/*}
ASK_CONFIRM=1


do_init () {
  EXEC_LINK=/usr/local/bin
  WITH_INIT=0
  CONF=$HOME2L_ROOT/etc/install.conf

  #~ echo "### HOME2L_ROOT = $HOME2L_ROOT, CONF=$CONF"

  test -e $CONF && . $CONF

  echo
  echo "##### Home2L Initialization #####"
  echo
  if [[ $ASK_CONFIRM == 1 ]]; then
    echo "About to install:"
  else
    echo "Installing:"
  fi
  echo "  $EXEC_LINK/home2l"
  if [[ "$VAR_DIR" != "" ]]; then
    echo "  $VAR_DIR"
  fi
  if [[ "$TMP_DIR" != "" ]]; then
    echo "  $TMP_DIR"
  fi
  if [[ "$WITH_INIT" == "1" ]]; then
    echo "  /etc/init.d/home2l - and start the service"
  fi
  WITH_USER=1
  if ! id home2l >/dev/null 2>&1; then
    echo
    echo "WARNING: No user 'home2l' found in the system."
    echo "         This may be ok for a demo, but for a productive system, you should"
    echo "         stop now and add a user account for all Home2L background activities,"
    echo "         for example (ommit or change the '--pid 5000' clause at your choice):"
    echo
    echo "         # adduser --pid 5000 home2l"
    WITH_USER=0
  fi
  if [[ $ASK_CONFIRM == 1 ]]; then
    echo
    read -p "Continue? (y/N) " ANS
  else
    ANS="y"
  fi
  if [[ "$ANS" == "y" ]]; then
    rm -f $EXEC_LINK/home2l
    ln -s $HOME2L_ROOT/bin/home2l $EXEC_LINK/home2l

    if [[ "$VAR_DIR" != "" ]]; then
      mkdir -p $VAR_DIR
      if [ -e $HOME2L_ROOT/var ]; then
        if [[ "`realpath -q $HOME2L_ROOT/var`" != "`realpath -q $VAR_DIR`" ]]; then
          echo "WARNING: '$HOME2L_ROOT/var' already exists and is NOT equivalent to '$VAR_DIR'!"
        fi
      else
        ln -s $VAR_DIR $HOME2L_ROOT/var
      fi
      if [[ "$WITH_USER" == "1" ]]; then
        chown home2l:home2l $VAR_DIR
      fi
    fi
    if [[ "$TMP_DIR" != "" ]]; then
      mkdir -p $TMP_DIR
      if [ -e $HOME2L_ROOT/tmp ]; then
        if [[ "`realpath -q $HOME2L_ROOT/tmp`" != "`realpath -q $TMP_DIR`" ]]; then
          echo "WARNING: '$HOME2L_ROOT/tmp' already exists and is NOT equivalent to '$TMP_DIR'!"
        fi
      else
        ln -s $TMP_DIR $HOME2L_ROOT/tmp
      fi
      if [[ "$WITH_USER" == "1" ]]; then
        chown home2l:home2l $TMP_DIR
      fi
    fi

    if [[ "$WITH_INIT" == "1" ]]; then
      cp $HOME2L_ROOT/install/initd-home2l /etc/init.d/home2l
      update-rc.d home2l defaults
      which service >/dev/null   && service home2l start    # SYS-V
      which systemctl >/dev/null && systemctl start home2l  # SystemD
    fi
  fi
}





######################### Main program ###############################


if [[ "$1" == "" ]]; then
  usage
  exit
fi


# Become root...
if [[ "$UID" != "0" ]]; then
   echo "Becoming 'root'..."
   exec sudo $0 $@
fi


# Evaluate command line...
DO_ETC=0
DO_BLOB=0
DO_APK=0
DO_INIT=0
SOURCE=
for ARG in $@; do
  case $ARG in
    -e | --etc)
      DO_ETC=1
      ;;
    -b | --blob)
      DO_BLOB=1
      ;;
    -a | --apk)
      DO_APK=1
      ;;
    -y)
      ASK_CONFIRM=0
      ;;
    -i)
      DO_INIT=1
      ;;
    *)
      SOURCE="$ARG"
      ;;
  esac
done
if [[ $DO_ETC == 0 && $DO_BLOB == 0 && $DO_APK == 0 && $DO_INIT == 0 ]]; then
  DO_ETC=1
  DO_BLOB=1
fi
if [[ $DO_BLOB == 1 ]]; then
  DO_APK=0
fi


# Init if requested or required ...
which home2l >/dev/null || DO_INIT=1
if [[ $DO_INIT == 1 ]]; then
  do_init
  exit 0
fi


# Set environment & load configuration ...
HOSTNAME=`hostname`
. `home2l -e`
CONF=$HOME2L_ROOT/etc/install.conf
test -e $CONF || error "Cannot find configuration file $CONF"
. $CONF


# Complete args ...
if [[ "$SOURCE" == "" ]]; then
  SOURCE=$MASTER_URL
  if [[ "$SOURCE" == "" ]]; then
    error "Source specification is missing."
  fi
fi


# Sanity checks ...
set -e
if [[ "$HOME2L_ROOT" == "" ]]; then
  error "HOME2L_ROOT not set properly."
fi
if [[ "$HOSTNAME" == "$MASTER" ]]; then
  error "This tool cannot be run on the master '$MASTER'."
fi


# Update main blob...
if [[ $DO_BLOB == 1 ]]; then
  ARGS=""
  for X in $EXCLUDE; do ARGS="$ARGS --exclude=$X"; done
  echo
  echo "# Updating '$HOME2L_ROOT' (without 'etc') from '$SOURCE'..."
  echo "#   extra args = '$ARGS'"
  #~ echo rsync -va --perms --chown=root:home2l --delete --exclude='etc' --exclude='tmp' --exclude='var' $ARGS $SOURCE/ $HOME2L_ROOT/
  rsync -va --chown=root:home2l --delete --exclude='etc' --exclude='tmp' --exclude='var' $ARGS $SOURCE/ $HOME2L_ROOT/
fi


# Update 'etc'...
if [[ $DO_ETC == 1 ]]; then
  echo
  echo "# Updating '$HOME2L_ROOT/etc' from '$SOURCE/etc'..."
  rsync -va --chown=root:home2l --delete $SOURCE/etc/ $HOME2L_ROOT/etc
fi


# Update APK file...
APK_FILE=install/Home2lApp.apk
if [[ $DO_APK == 1 ]]; then
  echo
  echo "# Updating '$HOME2L_ROOT/$APK_FILE' from '$SOURCE/$APK_FILE'..."
  rsync -va --chown=root:home2l --delete $SOURCE/$APK_FILE $HOME2L_ROOT/$APK_FILE
fi


# Fix ownership & permissions...
echo
echo "# Fixing permissions ..."
chmod 440 `find /opt/home2l/etc/secrets -type f` $HOME2L_ROOT/etc/secrets 2>/dev/null || echo "#   (no files found in '$HOME2L_ROOT/etc/secrets')"
chmod 550 `find /opt/home2l/etc/secrets -type d` $HOME2L_ROOT/etc/secrets 2>/dev/null || echo "#   ('$HOME2L_ROOT/etc/secrets' not found)"


# Restart daemon (if active) and other house-keeping...
if [[ $DO_BLOB == 1 || $DO_ETC == 1 ]]; then
  # Restart daemon...
  if [ -e /etc/init.d/home2l ]; then
    echo
    echo "# Updating '/etc/init.d/home2l' and eventually restarting daemon..."
    cp $HOME2L_ROOT/install/initd-home2l /etc/init.d/home2l
    service home2l status && service home2l reload
  fi
fi


# Exit successfully...
exit 0
